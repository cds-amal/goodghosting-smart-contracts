

@startuml

autonumber
skinparam legendBackgroundColor #FEFECE

<style>
      header {
        HorizontalAlignment left
        FontColor purple
        FontSize 14
        Padding 10
      }
    </style>

header Insights by Truffle

title Txn Hash: 0xa5ba9163b2ff7c5c9b05e8344907d2833dca6d2e6a2b951410305cdb9a168567


actor EOA as "EOA"
participant GoodGhosting_01 as "GoodGhosting_01"
participant SafeMath_01 as "SafeMath_01"
participant LendingPoolAddressesProviderMock_01 as "LendingPoolAddressesProviderMock_01"
participant undefined_01 as "undefined_01"
participant ERC20_01 as "ERC20_01"
participant SafeMath_02 as "SafeMath_02"
participant MockERC20Mintable_01 as "MockERC20Mintable_01"
participant Context_01 as "Context_01"
participant undefined_02 as "undefined_02"
participant ERC20_02 as "ERC20_02"
participant SafeMath_03 as "SafeMath_03"

"EOA" -> "GoodGhosting_01" ++: redeemFromExternalPool()
"GoodGhosting_01" -> "GoodGhosting_01" ++: isGameCompleted()
"GoodGhosting_01" -> "GoodGhosting_01" ++: getCurrentSegment()
"GoodGhosting_01" -> "SafeMath_01" ++: sub(\n\
<#FEFECE,#FEFECE>|= type |= name |= value |\n\
| uint | a | 1621685356 |\n\
| uint | b | 1621684094 |\n\
) { 0.0 GWEI }
"SafeMath_01" -> "GoodGhosting_01" --: Return (\n\
<#FEFECE,#FEFECE>|= type |= name |= value |\n\
| uint |  | 1262 |\n\
)
"GoodGhosting_01" -> "SafeMath_01" ++: div(\n\
<#FEFECE,#FEFECE>|= type |= name |= value |\n\
| uint | a | 1262 |\n\
| uint | b | 180 |\n\
) { 0.0 GWEI }
"SafeMath_01" -> "GoodGhosting_01" --: Return (\n\
<#FEFECE,#FEFECE>|= type |= name |= value |\n\
| uint |  | 7 |\n\
)
"GoodGhosting_01" -> "GoodGhosting_01" --: Return (\n\
<#FEFECE,#FEFECE>|= type |= name |= value |\n\
| uint |  | 7 |\n\
)
"GoodGhosting_01" -> "GoodGhosting_01" --: Return (\n\
<#FEFECE,#FEFECE>|= type |= name |= value |\n\
| bool |  | true |\n\
)
"GoodGhosting_01" -> "LendingPoolAddressesProviderMock_01" ++: balanceOf(\n\
<#FEFECE,#FEFECE>|= type |= name |= value |\n\
| address | account | 0xe57779fAb48667c13C1508B872CbC80dea7B9186 |\n\
) { 0.0 GWEI }
"LendingPoolAddressesProviderMock_01" -> "GoodGhosting_01" --: Return (\n\
<#FEFECE,#FEFECE>|= type |= name |= value |\n\
| uint |  | 1060000000000000000000 |\n\
)
"GoodGhosting_01" -> "LendingPoolAddressesProviderMock_01" ++: withdraw(\n\
<#FEFECE,#FEFECE>|= type |= name |= value |\n\
| address | asset | 0x89E9580a57e4A181E613cCd9EbA1054d7E77B385 |\n\
| uint | amount | 115792089237316195423570985008687907853269984665640564039457584007913129639935 |\n\
| address | to | 0xe57779fAb48667c13C1508B872CbC80dea7B9186 |\n\
) { 0.0 GWEI }
"LendingPoolAddressesProviderMock_01" -> "LendingPoolAddressesProviderMock_01" ++: balanceOf(\n\
<#FEFECE,#FEFECE>|= type |= name |= value |\n\
| address | account | 0xe57779fAb48667c13C1508B872CbC80dea7B9186 |\n\
) { 0.0 GWEI }
"LendingPoolAddressesProviderMock_01" -> "LendingPoolAddressesProviderMock_01" --: Return (\n\
<#FEFECE,#FEFECE>|= type |= name |= value |\n\
| uint |  | 1060000000000000000000 |\n\
)
"LendingPoolAddressesProviderMock_01" -> "undefined_01" ++: unknown-internal-name()
"undefined_01" -> "ERC20_01" ++: _beforeTokenTransfer(\n\
<#FEFECE,#FEFECE>|= type |= name |= value |\n\
| address | from | 0xe57779fAb48667c13C1508B872CbC80dea7B9186 |\n\
| address | to | 0x00000000000000000000003976747fe11A100000 |\n\
| uint | amount | 3984 |\n\
) { 0.0 GWEI }
"ERC20_01" -> "SafeMath_02" ++: sub(\n\
<#FEFECE,#FEFECE>|= type |= name |= value |\n\
| uint | a | 1060000000000000000000 |\n\
| uint | b | 1060000000000000000000 |\n\
| string | errorMessage | 'ERC20: burn amount exceeds balance' |\n\
) { 0.0 GWEI }
"SafeMath_02" -> "ERC20_01" --: Return (\n\
<#FEFECE,#FEFECE>|= type |= name |= value |\n\
| uint |  | 0 |\n\
)
"ERC20_01" -> "SafeMath_02" ++: sub(\n\
<#FEFECE,#FEFECE>|= type |= name |= value |\n\
| uint | a | 1060000000000000000000 |\n\
| uint | b | 1060000000000000000000 |\n\
) { 0.0 GWEI }
"SafeMath_02" -> "ERC20_01" --: Return (\n\
<#FEFECE,#FEFECE>|= type |= name |= value |\n\
| uint |  | 0 |\n\
)
"ERC20_01" -> "MockERC20Mintable_01" ++: transfer(\n\
<#FEFECE,#FEFECE>|= type |= name |= value |\n\
| address | recipient | 0xe57779fAb48667c13C1508B872CbC80dea7B9186 |\n\
| uint | amount | 1060000000000000000000 |\n\
) { 0.0 GWEI }
"MockERC20Mintable_01" -> "Context_01" ++: _msgSender()
"Context_01" -> "MockERC20Mintable_01" --: Return (\n\
<#FEFECE,#FEFECE>|= type |= name |= value |\n\
| address |  | 0x21722dC5D78334bAbAA19A0fCA5210bd453EAa57 |\n\
)
"MockERC20Mintable_01" -> "undefined_02" ++: unknown-internal-name()
"undefined_02" -> "ERC20_02" ++: _beforeTokenTransfer(\n\
<#FEFECE,#FEFECE>|= type |= name |= value |\n\
| address | from | 0xe57779fAb48667c13C1508B872CbC80dea7B9186 |\n\
| address | to | 0x00000000000000000000003976747fe11A100000 |\n\
| uint | amount | 1901 |\n\
) { 0.0 GWEI }
"ERC20_02" -> "SafeMath_03" ++: sub(\n\
<#FEFECE,#FEFECE>|= type |= name |= value |\n\
| uint | a | 1060000000000000000000 |\n\
| uint | b | 1060000000000000000000 |\n\
| string | errorMessage | 'ERC20: transfer amount exceeds balance' |\n\
) { 0.0 GWEI }
"SafeMath_03" -> "ERC20_02" --: Return (\n\
<#FEFECE,#FEFECE>|= type |= name |= value |\n\
| uint |  | 0 |\n\
)
"ERC20_02" -> "SafeMath_03" ++: add(\n\
<#FEFECE,#FEFECE>|= type |= name |= value |\n\
| uint | a | 0 |\n\
| uint | b | 1060000000000000000000 |\n\
) { 0.0 GWEI }
"SafeMath_03" -> "ERC20_02" --: Return (\n\
<#FEFECE,#FEFECE>|= type |= name |= value |\n\
| uint |  | 1060000000000000000000 |\n\
)
"ERC20_02" -> "undefined_02" --: 
"ERC20_01" -> "undefined_01" --: 
"GoodGhosting_01" -> "MockERC20Mintable_01" ++: balanceOf(\n\
<#FEFECE,#FEFECE>|= type |= name |= value |\n\
| address | account | 0xe57779fAb48667c13C1508B872CbC80dea7B9186 |\n\
) { 0.0 GWEI }
"MockERC20Mintable_01" -> "GoodGhosting_01" --: Return (\n\
<#FEFECE,#FEFECE>|= type |= name |= value |\n\
| uint |  | 1060000000000000000000 |\n\
)
"GoodGhosting_01" -> "SafeMath_01" ++: sub(\n\
<#FEFECE,#FEFECE>|= type |= name |= value |\n\
| uint | a | 1060000000000000000000 |\n\
| uint | b | 60000000000000000000 |\n\
) { 0.0 GWEI }
"SafeMath_01" -> "GoodGhosting_01" --: Return (\n\
<#FEFECE,#FEFECE>|= type |= name |= value |\n\
| uint |  | 1000000000000000000000 |\n\
)
"GoodGhosting_01" -> "SafeMath_01" ++: mul(\n\
<#FEFECE,#FEFECE>|= type |= name |= value |\n\
| uint | a | 1000000000000000000000 |\n\
| uint | b | 5 |\n\
) { 0.0 GWEI }
"SafeMath_01" -> "GoodGhosting_01" --: Return (\n\
<#FEFECE,#FEFECE>|= type |= name |= value |\n\
| uint |  | 5000000000000000000000 |\n\
)
"GoodGhosting_01" -> "SafeMath_01" ++: div(\n\
<#FEFECE,#FEFECE>|= type |= name |= value |\n\
| uint | a | 5000000000000000000000 |\n\
| uint | b | 100 |\n\
) { 0.0 GWEI }
"SafeMath_01" -> "GoodGhosting_01" --: Return (\n\
<#FEFECE,#FEFECE>|= type |= name |= value |\n\
| uint |  | 50000000000000000000 |\n\
)
"GoodGhosting_01" -> "SafeMath_01" ++: sub(\n\
<#FEFECE,#FEFECE>|= type |= name |= value |\n\
| uint | a | 1000000000000000000000 |\n\
| uint | b | 50000000000000000000 |\n\
) { 0.0 GWEI }
"SafeMath_01" -> "GoodGhosting_01" --: Return (\n\
<#FEFECE,#FEFECE>|= type |= name |= value |\n\
| uint |  | 950000000000000000000 |\n\
)
"GoodGhosting_01" -> "EOA" --: 

legend
Participant details
<#FEFECE,#D0D000>|= Alias |= Contract name |= Address |
<#FEFECE>| EOA | Externally Owned Account | 0xf17f52151EbEF6C7334FAD080c5704D77216b732 |
<#FEFECE>| GoodGhosting_01 | GoodGhosting | 0xe57779fAb48667c13C1508B872CbC80dea7B9186 |
<#FEFECE>| SafeMath_01 | SafeMath | 0xe57779fAb48667c13C1508B872CbC80dea7B9186 |
<#FEFECE>| LendingPoolAddressesProviderMock_01 | LendingPoolAddressesProviderMock | 0x21722dC5D78334bAbAA19A0fCA5210bd453EAa57 |
<#FEFECE>| undefined_01 | undefined | 0x21722dC5D78334bAbAA19A0fCA5210bd453EAa57 |
<#FEFECE>| ERC20_01 | ERC20 | 0x21722dC5D78334bAbAA19A0fCA5210bd453EAa57 |
<#FEFECE>| SafeMath_02 | SafeMath | 0x21722dC5D78334bAbAA19A0fCA5210bd453EAa57 |
<#FEFECE>| MockERC20Mintable_01 | MockERC20Mintable | 0x89E9580a57e4A181E613cCd9EbA1054d7E77B385 |
<#FEFECE>| Context_01 | Context | 0x89E9580a57e4A181E613cCd9EbA1054d7E77B385 |
<#FEFECE>| undefined_02 | undefined | 0x89E9580a57e4A181E613cCd9EbA1054d7E77B385 |
<#FEFECE>| ERC20_02 | ERC20 | 0x89E9580a57e4A181E613cCd9EbA1054d7E77B385 |
<#FEFECE>| SafeMath_03 | SafeMath | 0x89E9580a57e4A181E613cCd9EbA1054d7E77B385 |
endlegend

@enduml